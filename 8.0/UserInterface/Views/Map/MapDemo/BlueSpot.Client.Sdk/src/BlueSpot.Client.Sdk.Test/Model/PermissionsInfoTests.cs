/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BlueSpot.Client.Sdk.Model;
using BlueSpot.Client.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BlueSpot.Client.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing PermissionsInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PermissionsInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PermissionsInfo
        //private PermissionsInfo instance;

        public PermissionsInfoTests()
        {
            // TODO uncomment below to create an instance of PermissionsInfo
            //instance = new PermissionsInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PermissionsInfo
        /// </summary>
        [Fact]
        public void PermissionsInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" PermissionsInfo
            //Assert.IsType<PermissionsInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Authorities'
        /// </summary>
        [Fact]
        public void AuthoritiesTest()
        {
            // TODO unit test for the property 'Authorities'
        }
        /// <summary>
        /// Test the property 'Entities'
        /// </summary>
        [Fact]
        public void EntitiesTest()
        {
            // TODO unit test for the property 'Entities'
        }
        /// <summary>
        /// Test the property 'EntityAttributes'
        /// </summary>
        [Fact]
        public void EntityAttributesTest()
        {
            // TODO unit test for the property 'EntityAttributes'
        }
        /// <summary>
        /// Test the property 'Specifics'
        /// </summary>
        [Fact]
        public void SpecificsTest()
        {
            // TODO unit test for the property 'Specifics'
        }

    }

}
