/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BlueSpot.Client.Sdk.Model;
using BlueSpot.Client.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BlueSpot.Client.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing MetaPropertyInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MetaPropertyInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MetaPropertyInfo
        //private MetaPropertyInfo instance;

        public MetaPropertyInfoTests()
        {
            // TODO uncomment below to create an instance of MetaPropertyInfo
            //instance = new MetaPropertyInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MetaPropertyInfo
        /// </summary>
        [Fact]
        public void MetaPropertyInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" MetaPropertyInfo
            //Assert.IsType<MetaPropertyInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'AttributeType'
        /// </summary>
        [Fact]
        public void AttributeTypeTest()
        {
            // TODO unit test for the property 'AttributeType'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Cardinality'
        /// </summary>
        [Fact]
        public void CardinalityTest()
        {
            // TODO unit test for the property 'Cardinality'
        }
        /// <summary>
        /// Test the property 'Mandatory'
        /// </summary>
        [Fact]
        public void MandatoryTest()
        {
            // TODO unit test for the property 'Mandatory'
        }
        /// <summary>
        /// Test the property 'ReadOnly'
        /// </summary>
        [Fact]
        public void ReadOnlyTest()
        {
            // TODO unit test for the property 'ReadOnly'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Persistent'
        /// </summary>
        [Fact]
        public void PersistentTest()
        {
            // TODO unit test for the property 'Persistent'
        }

    }

}
