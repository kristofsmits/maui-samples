/*
 * OpenAPI definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BlueSpot.Client.Sdk.Client;
using BlueSpot.Client.Sdk.Api;
// uncomment below to import models
//using BlueSpot.Client.Sdk.Model;

namespace BlueSpot.Client.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ServicesControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ServicesControllerApiTests : IDisposable
    {
        private ServicesControllerApi instance;

        public ServicesControllerApiTests()
        {
            instance = new ServicesControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ServicesControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ServicesControllerApi
            //Assert.IsType<ServicesControllerApi>(instance);
        }

        /// <summary>
        /// Test GetServiceInfo
        /// </summary>
        [Fact]
        public void GetServiceInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceName = null;
            //var response = instance.GetServiceInfo(serviceName);
            //Assert.IsType<RestServiceInfo>(response);
        }

        /// <summary>
        /// Test GetServiceInfos
        /// </summary>
        [Fact]
        public void GetServiceInfosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetServiceInfos();
            //Assert.IsType<List<RestServiceInfo>>(response);
        }

        /// <summary>
        /// Test InvokeServiceMethodGet
        /// </summary>
        [Fact]
        public void InvokeServiceMethodGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceName = null;
            //string methodName = null;
            //Dictionary<string, string> paramsMap = null;
            //string modelVersion = null;
            //var response = instance.InvokeServiceMethodGet(serviceName, methodName, paramsMap, modelVersion);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test InvokeServiceMethodPost
        /// </summary>
        [Fact]
        public void InvokeServiceMethodPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceName = null;
            //string methodName = null;
            //string modelVersion = null;
            //string body = null;
            //var response = instance.InvokeServiceMethodPost(serviceName, methodName, modelVersion, body);
            //Assert.IsType<string>(response);
        }
    }
}
